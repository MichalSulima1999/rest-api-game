openapi: 3.0.3
info:
  title: RPG API
  description: API for RPG REST game.
  version: '0.1'
servers:
  - url: http://localhost:8080
paths:
  /users:
    get:
      summary: Returns a list of users.
      operationId: getUsers
      x-preauth: "hasAuthority('ADMIN')"
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserLite'
  /character:
    post:
      summary: Creates a character.
      operationId: createCharacter
      x-preauth: "hasAuthority('USER')"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharacterCreateRequest'
      responses:
        '200':
          description: Info about created character
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterLite'
  /character/image/{characterArtwork}:
    get:
      summary: Get full sized character artwork
      operationId: getCharacterArtwork
      parameters:
        - name: characterArtwork
          in: path
          required: true
          description: Artwork enum
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
  /character/thumbnail/{characterArtwork}:
    get:
      summary: Get thumbnail artwork
      operationId: getCharacterArtworkThumbnail
      parameters:
        - name: characterArtwork
          in: path
          required: true
          description: Artwork enum
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
  /character/artworks:
    get:
      summary: Get enum artwork
      operationId: getCharacterArtworkEnum
      x-preauth: "hasAuthority('USER')"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /character/user-characters:
    get:
      summary: Get user characters
      operationId: getUserCharacters
      x-preauth: "hasAuthority('USER')"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterBasics'
  /character/{characterId}:
    get:
      summary: Get user character by id
      operationId: getUserCharacter
      x-preauth: "hasAuthority('USER')"
      parameters:
        - name: characterId
          in: path
          required: true
          description: Character id
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharacterBasic'
  /statistics/{characterId}:
    get:
      summary: Get user character statistics by character id
      operationId: getStatistics
      x-preauth: "hasAuthority('USER')"
      parameters:
        - name: characterId
          in: path
          required: true
          description: Character id
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsDetails'
components:
  schemas:
    ErrorCodes:
      type: string
      enum:
        - EMPTY_JWT
        - JWT_EXPIRED
        - USER_NOT_FOUND
        - REFRESH_TOKEN_NOT_FOUND
        - ACCOUNT_USERNAME_EXISTS
        - ACCOUNT_EMAIL_EXISTS
        - ACCOUNT_ALREADY_VERIFIED
        - VERIFICATION_EMAIL_SEND_ERROR
        - CHARACTER_ALREADY_EXISTS
        - CHARACTER_NOT_FOUND
        - NOT_ENOUGH_SKILL_POINTS
        - GET_IMAGE
        - IMAGE_DOES_NOT_EXIST
    UserLite:
      type: object
      required:
        - userName
        - email
      properties:
        userName:
          type: string
        email:
          type: string
    CharacterCreateRequest:
      type: object
      required:
        - name
        - race
        - sex
        - characterClass
        - artwork
        - statistics
      properties:
        name:
          description: Character name
          type: string
        race:
          description: HUMAN/ELF/DWARF
          type: string
        sex:
          description: MALE/FEMALE
          type: string
        characterClass:
          description: WARRIOR/ROGUE/MAGE
          type: string
        artwork:
          description: Character artwork
          type: string
        statistics:
          description: Character statistics
          $ref: '#/components/schemas/StatisticsUpdateRequest'
    StatisticsUpdateRequest:
      type: object
      required:
        - strength
        - dexterity
        - constitution
        - intelligence
      properties:
        strength:
          description: Characters strength to add
          type: integer
        dexterity:
          description: Characters dexterity to add
          type: integer
        constitution:
          description: Characters constitution to add
          type: integer
        intelligence:
          description: Characters intelligence to add
          type: integer
    CharacterLite:
      type: object
      required:
        - id
        - name
        - race
        - sex
        - characterClass
        - artwork
      properties:
        id:
          description: Character id
          type: integer
          format: int64
        name:
          description: Character name
          type: string
        race:
          description: Character race
          type: string
        sex:
          description: Character sex
          type: string
        characterClass:
          description: Character class
          type: string
        artwork:
          description: Character artwork
          type: string
    CharacterBasics:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CharacterBasic'
    CharacterBasic:
      allOf:
        - $ref: '#/components/schemas/CharacterLite'
        - type: object
          required:
            - statistics
            - occupation
          properties:
            statistics:
              $ref: '#/components/schemas/StatisticsLite'
            occupation:
              $ref: '#/components/schemas/OccupationBasic'
    StatisticsLite:
      type: object
      required:
        - currentXp
        - xpToNextLevel
        - currentLevel
        - maxHp
        - currentHp
        - maxMana
        - currentMana
      properties:
        currentXp:
          description: Character current xp
          type: integer
        xpToNextLevel:
          description: Character xp to next level
          type: integer
        currentLevel:
          description: Character current level
          type: integer
        maxHp:
          description: Character max HP
          type: integer
        currentHp:
          description: Character current HP
          type: integer
        maxMana:
          description: Character max mana
          type: integer
        currentMana:
          description: Character current mana
          type: integer
    StatisticsDetails:
      allOf:
        - $ref: '#/components/schemas/StatisticsLite'
        - type: object
          required:
            - damage
            - magicDamage
            - armor
            - dodgeChance
            - criticalChance
            - freeStatisticPoints
            - strength
            - dexterity
            - constitution
            - intelligence
          properties:
            damage:
              description: Character damage
              type: integer
            magicDamage:
              description: Character magic damage
              type: integer
            armor:
              description: Character armor
              type: integer
            dodgeChance:
              description: Character dodge chance
              type: number
              format: float
            criticalChance:
              description: Character critical chance
              type: number
              format: float
            freeStatisticPoints:
              description: Character free statistic points
              type: integer
            strength:
              description: Character strength
              type: integer
            dexterity:
              description: Character dexterity
              type: integer
            constitution:
              description: Character constitution
              type: integer
            intelligence:
              description: Character intelligence
              type: integer
    OccupationBasic:
      type: object
      properties:
        finishTime:
          description: Occupation finish time
          type: string
        occupationType:
          description: Character occupation
          type: string